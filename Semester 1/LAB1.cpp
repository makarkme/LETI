#include <iostream>
#include <windows.h>

using namespace std;

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int a, b, a1, b1, a2, b2;  // Координаты для треугольника.
    cout << "Введите 2 числа через пробел: " << endl;
    cin >> a >> b; // Получаем координаты точки.

    if (b < a) { // Тут ближняя к началу координат точка всегда будет обозначаться за "1", а дальняя - за "2".
        // Это упрощает написание кода для отрицательной плоскости и помогает структуризировать вывод.
        a1 = b; b1 = b; a2 = a; b2 = a;
    } else {
        a1 = a; b1 = a; a2 = b; b2 = b;
    }

    cout << "Итоговые координаты треугольника: " << endl;
    cout << "(" << a1 << ", " << b1 << ")" << "; " << "(" << a << ", " << b << ")" << "; " << "(" << a2 << ", " << b2
         << ")" << endl; // Вывод координат треугольника.

    int x, y;
    while (true) {
        cout << "Введите координаты точки через пробел: " << endl;
        cin >> x >> y;

        if (x == 0 && y == 0) { // Чтобы при вводе (0, 0) программа завершалась без вывода.
            break;
        }
        if (x >= a1 && x <= a2 && y >= b1 && y <= b2 ) { // Сначала прописываем условие как для квадрата.
            if (a > b) { // Тут определяем "направление" треугольника (ближе к Re или к Im).
                if (x >= y) {
                    cout << "Да, точка находится внутри треугольника." << endl;
                }
                else {
                    cout << "Нет, точка не находится внутри треугольника." << endl;
                }
            }
            if (a < b) {
                if (x <= y) {
                    cout << "Да, точка находится внутри треугольника." << endl;
                }
                else {
                    cout << "Нет, точка не находится внутри треугольника." << endl;
                }
            }
        }
        else {
            cout << "Нет, точка не находится внутри треугольника." << endl;
        }
    }
}