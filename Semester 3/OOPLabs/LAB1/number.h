#pragma once // для подключения файла строго 1 раз

//namespace NumberClass { // namespace - локализуем имена переменных во избежание ошибок при одинаковом именовании
//    // (нам это не понадобится, просто codestyle)
//    class Number {
//    private: // приватка запрещает взаимодействие с его полями вне класса
//        long double number;
//    public:
//        Number() = default; // дефолтный конструктор, нужен для инициализации функции без ввода данных в функцию
//        explicit Number(
//                long double value) { // кастомный конструктор, нужен для инициализации функции с вводом данных в функцию
//            // типа чтоб сразу функцию проинициализировал и сразу в скобочки что-то передал
//            // explicit - говорит об отсутствии внутри функции каста (неявных преобразований)
//            this->number = value; // this - чтоб можно было разделять переменные внутри функции и переменные внутри класса, если они названы одинаково (короче codestyle)
//        }
//
//        [[nodiscard]] long double
//        Get() const { // [[nodiscard]] - говорит об обязательности использования результата функции
//            // const после функции гарантирует отсутствие изменений в number
//            return this->number;
//        }
//
//        void SetFromDouble(long double value) {
//            this->number = value;
//        }
//    };
//}

typedef double number;